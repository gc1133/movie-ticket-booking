server:
  port: 8084
spring:
  application:
    name: booking-service
  datasource:
    url: jdbc:postgresql://postgres-booking:5432/bookingdb
    username: admin
    password: password
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      transaction-id-prefix: booking-tx-
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: booking-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
eureka:
  client:
    service-url:
      defaultZone: http://discovery-service:8761/eureka
management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
logging:
  level:
    com.example.bookingservice: INFO
    org.springframework: WARN