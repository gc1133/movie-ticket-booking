version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 1
    ports:
      - "9092:9092"

  postgres-user:
    image: postgres:16
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data

  postgres-movie:
    image: postgres:16
    environment:
      POSTGRES_DB: moviedb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres-movie-data:/var/lib/postgresql/data

  postgres-theatre:
    image: postgres:16
    environment:
      POSTGRES_DB: theatredb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - postgres-theatre-data:/var/lib/postgresql/data

  postgres-booking:
    image: postgres:16
    environment:
      POSTGRES_DB: bookingdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    volumes:
      - postgres-booking-data:/var/lib/postgresql/data

  discovery-service:
    image: discovery-service
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - kafka

  user-service:
    image: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres-user
      - kafka
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/userdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka

  movie-service:
    image: movie-service
    build:
      context: ./movie-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres-movie
      - kafka
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-movie:5432/moviedb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka

  theatre-service:
    image: theatre-service
    build:
      context: ./theatre-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres-theatre
      - kafka
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-theatre:5432/theatredb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka

  booking-service:
    image: booking-service
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - postgres-booking
      - kafka
      - discovery-service
      - user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-booking:5432/bookingdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka

  notification-service:
    image: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - discovery-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka

volumes:
  postgres-user-data:
  postgres-movie-data:
  postgres-theatre-data:
  postgres-booking-data: