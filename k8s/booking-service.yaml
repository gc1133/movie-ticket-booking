apiVersion: apps/v1
kind: Deployment
metadata:
  name: booking-service
  namespace: movie-ticket-booking
spec:
  replicas: 3
  selector:
    matchLabels:
      app: booking-service
  template:
    metadata:
      labels:
        app: booking-service
    spec:
      containers:
        - name: booking-service
          image: <account-id>.dkr.ecr.us-east-1.amazonaws.com/booking-service:latest
          ports:
            - containerPort: 8084
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: POSTGRES_BOOKING_URL
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgres-booking-password
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: KAFKA_BOOTSTRAP_SERVERS
            - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
            - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: EUREKA_HOST
            - name: JASYPT_ENCRYPTOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jasypt-encryptor-password
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
---
apiVersion: v1
kind: Service
metadata:
  name: booking-service
  namespace: movie-ticket-booking
spec:
  selector:
    app: booking-service
  ports:
    - port: 8084
      targetPort: 8084
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: booking-service-hpa
  namespace: movie-ticket-booking
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: booking-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70